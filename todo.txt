#
# This file is part of the Book-eShop project.
#
#  Copyright (C) 2010-2011 Mahmoud Ben Hassine <md.benhassine@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#
# Author :
# 	Mahmoud Ben Hassine <md.benhassine@gmail.com>
#

Book e-Shop v1.0 : Servlet/JSP + Spring + Hibernate

TODO :
- add forms validation (create/update customer), may use bean validation JSR 303
- change customer ID (id=email -> bad design)
- all security checks
- add order table
- add I18N
- add 'home','about' and 'contacts' pages (may use http://www.emailmeform.com/)
- sort cart content before displaying cart details
- add 'remove account' feature (scrum user story : as a customer i want to be able to delete my account)
- add 'Forgot your password' feature
- add 'download ebook' feature
- add 'remember me' feature (at least see how to do it)
- add 'advanced search' feature (title,author,edition,year,etc)
- add 'survey' feature
- add multi page result displaying
- add 'sort results by price,title,author' feature
- add currency selection/conversion (may call web service)
- use google maps API to show a map for the customer address
- add checkout with PayPal API (at least see how to do it)
- add web services exposed to partners (available books, quantity,etc)
- test transactional behavior
- add mock service for email sending bean
- use shopping cart and logged customer as session-scoped beans in spring context
- add apache tiles for pages layout
- add apache velocity template for confirmation emails sent to customers
- add a batch task to send a complete report for sales (may use spring batch/ quartz)
- split the project into separate maven web modules
