<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The MIT License
  ~
  ~   Copyright (c) 2012, Mahmoud Ben Hassine (md.benhassine@gmail.com)
  ~
  ~   Permission is hereby granted, free of charge, to any person obtaining a copy
  ~   of this software and associated documentation files (the "Software"), to deal
  ~   in the Software without restriction, including without limitation the rights
  ~   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~   copies of the Software, and to permit persons to whom the Software is
  ~   furnished to do so, subject to the following conditions:
  ~
  ~   The above copyright notice and this permission notice shall be included in
  ~   all copies or substantial portions of the Software.
  ~
  ~   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~   THE SOFTWARE.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- ========================== -->
    <!--      DAO configuration     -->
    <!-- ========================== -->


    <bean id="storeDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <jdbc:initialize-database data-source="storeDataSource">
        <jdbc:script location="classpath:config/schema.sql"/>
        <jdbc:script location="classpath:config/data.sql"/>
    </jdbc:initialize-database>

    <util:properties id="hibernateProperties" location="classpath:config/hibernate.properties">
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
    </util:properties>

    <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="storeDataSource"/>
        <property name="mappingDirectoryLocations" value="classpath:/mappings"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
    </bean>

    <bean id="bookDAO" class="org.benassi.bookeshop.data.access.impl.BookDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
        <property name="maxCatalogueResults" value="10"/>
    </bean>

    <bean id="customerDAO" class="org.benassi.bookeshop.data.access.impl.CustomerDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <bean id="categoryDAO" class="org.benassi.bookeshop.data.access.impl.CategoryDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <bean id="orderDAO" class="org.benassi.bookeshop.data.access.impl.OrderDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <bean id="orderStatusDAO" class="org.benassi.bookeshop.data.access.impl.OrderStatusDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>

    <bean id="orderItemDAO" class="org.benassi.bookeshop.data.access.impl.OrderItemDAOImpl">
        <property name="sessionFactory" ref="hibernateSessionFactory"/>
    </bean>


    <!-- ===================================== -->
    <!--      PDF catalogue generator bean     -->
    <!-- ===================================== -->

    <bean id="pdfCatalogueGenerator" class="org.benassi.bookeshop.web.util.PdfCatalogueGenerator">
        <property name="dataSource" ref="storeDataSource"/>
        <!-- any update of the sql query should be followed by an update in the jasper report design (reports/report.jrxml) -->
        <property name="query" value="SELECT b.title,a.firstName + ' ' + a.lastName as author, b.price FROM book b, author a where b.author_id = a.id;"/>
    </bean>

</beans>